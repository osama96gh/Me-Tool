#!/bin/zsh

# Me Tool - Smart command-line utility
# Main executable script

# Set script directory and project root
SCRIPT_DIR="${0:A:h}"
PROJECT_ROOT="${SCRIPT_DIR:h}"

# Source utility functions
source "${PROJECT_ROOT}/src/utils/helpers.sh"

# Source core components in correct order
source "${PROJECT_ROOT}/src/utils/config.sh"
source "${PROJECT_ROOT}/src/utils/executor.sh"
source "${PROJECT_ROOT}/src/utils/parser.sh"

# Error handling
handle_error() {
    local error_msg="$1"
    print_error "$error_msg"
    exit 1
}

# Main command processing
main() {
    # Show help if no arguments
    if [[ $# -eq 0 ]]; then
        show_general_help
        exit 0
    fi

    # Handle help commands
    if [[ "$1" == "help" ]]; then
        if [[ $# -eq 1 ]]; then
            show_general_help
            exit 0
        else
            local help_category="$2"
            if yq e ".categories.$help_category" "$CONFIG_FILE" &> /dev/null; then
                show_category_help "$help_category"
                exit 0
            else
                handle_error "Unknown category: $help_category"
            fi
        fi
    elif [[ "$2" == "help" ]]; then
        if yq e ".categories.$1" "$CONFIG_FILE" &> /dev/null; then
            show_category_help "$1"
            exit 0
        else
            handle_error "Unknown category: $1"
        fi
    fi
    
    local category=""
    local cmd="$1"
    shift
    
    # Check if first argument is a category
    if yq e ".categories.$cmd" "$CONFIG_FILE" &> /dev/null; then
        category="$cmd"
        cmd="$1"
        shift
    else
        # Use dynamic command parsing to determine category
        category="$(get_category "$cmd")"
        if [[ $? -ne 0 ]]; then
            handle_error "Unknown command: $cmd"
        fi
    fi
    
    # Validate command for category
    if ! validate_command "$category" "$cmd"; then
        handle_error "Invalid command '$cmd' for category '$category'"
    fi
    
    # Execute the command
    execute_command "$category" "$cmd" "$@"
}

# Run main function with all arguments
main "$@"
